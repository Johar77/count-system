spring.application.name=counting-service
server.port=8090
#springboot 2.0 使用server.servlet.context-path
server.servlet.context-path=/counting-service

# 定时清理时间， 单位：s
count.view.time = 61
# 缓存初始化大小
count.view.cache.initial.capacity = 10000

#kafka配置
spring.kafka.num.partitions = 10
spring.kafka.num.replication = 1
spring.kafka.template.default-topic=count.view.topic
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.retries=3
spring.kafka.producer.batch-size=1
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.acks=0
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# jpa
spring.datasource.url=jdbc:mysql://localhost:3306/counting?characterEncoding=utf8&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
# 启动时初始化数据库 默认情况下加载data.sql 或者 data-${platform}.sql,和spring.datasource.platform一起使用
# schema.sql 为表初始化语句 data.sql为数据初始化
#spring.datasource.initialization-mode=always
spring.jpa.properties.hibernate.jdbc.batch_size=1000
spring.jpa.properties.hibernate.order_inserts=true

